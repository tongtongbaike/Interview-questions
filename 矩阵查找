//题目：在一个二维数组中，每一行都按照从左到右递增的顺序的排序，每一列都按照从上到下递增的顺序排序。
//请完成一个函数，输入这样一个二维数组和一个整数，判断数组中是否含有该整数。
class Solution {
public:
    bool Find(int* arry,int target,int rows,int columns) {
      	if（NULL == arry）
        {
            return false;
        }
        //二位数组实际相当于一个连续排布的一维数组。
    	if(arry!=NULL && rows>0 &&columns > 0)
        {
            int row = 0;
            int column = columns - 1;
            while(row < rows && column >= 0)
            {
                //3种情况：相等则找到相同数，返回ture
                if(arry[row * columns + column] == number)
                {
                  	return true;   
                }
                //比较的是右上角的数，若该数大于查找数则删除当列
                else if(arry[row * columns + column] > number){
                    --column;
                }
                //若当前数小于查找数，则删除当前行。
                else{
                    ++row;
                }
               
            }
        }
        return false;
    }
};
